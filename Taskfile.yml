version: '3'

tasks:

  about:
    desc: Generate about.py
    cmds:
      - ./scripts/builder.sh ./scripts/version.sh
    status:
      - test -s archivist/about.py

  audit:
    desc: Audit the code
    deps: [about]
    cmds:
      - ./scripts/builder.sh pip-audit -r requirements.txt

  builder:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - docker build --no-cache --build-arg VERSION=3.6 -f Dockerfile-builder -t jitsuin-archivist-python-builder .

  builder-3.7:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - docker build --no-cache --build-arg VERSION=3.7 -f Dockerfile-builder -t jitsuin-archivist-python-builder .

  builder-3.8:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - docker build --no-cache --build-arg VERSION=3.8 -f Dockerfile-builder -t jitsuin-archivist-python-builder .

  builder-3.9:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - docker build --no-cache --build-arg VERSION=3.9 -f Dockerfile-builder -t jitsuin-archivist-python-builder .

  builder-3.10:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - docker build --no-cache --build-arg VERSION=3.10 -f Dockerfile-builder -t jitsuin-archivist-python-builder .

  check:
    desc: Check the style, bug and quality of the code
    deps: [about]
    cmds:
      - ./scripts/builder.sh python3 --version
      - ./scripts/builder.sh pycodestyle --format=pylint setup.py archivist examples functests unittests
      - ./scripts/builder.sh python3 -m pylint --rcfile=pylintrc setup.py archivist examples functests unittests

  clean:
    desc: Clean git repo
    cmds:
      - find -name '*,cover' -type f -delete
      - git clean -fdX

  docs:
    desc: Create sphinx documentation
    deps: [about]
    cmds:
      - ./scripts/builder.sh /bin/bash -c "cd docs && make clean && make html"

  format:
    desc: Format code using black
    deps: [about]
    cmds:
      - ./scripts/builder.sh black setup.py archivist examples functests unittests

  functests:
    desc: Run functests - requires an archivist instance and a authtoken
    deps: [about]
    cmds:
      - ./scripts/builder.sh ./scripts/functests.sh

  publish:
    desc: publish wheel package (will require username and password)
    deps: [about]
    cmds:
      - ./scripts/builder.sh python3 -m twine upload --repository pypi dist/*

  unittests:
    desc: Run unittests
    deps: [about]
    cmds:
      - ./scripts/builder.sh ./scripts/unittests.sh

  wheel:
    desc: Builds python wheel package
    deps: [about]
    cmds:
      - rm -rf *egg-info
      - rm -rf build
      - rm -f dist/*
      - python3 setup.py bdist_wheel
