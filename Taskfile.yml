version: '3'

tasks:

  about:
    desc: Generate about.py
    cmds:
      - ./scripts/builder.sh ./scripts/version.sh
    status:
      - test -s archivist/about.py

  audit:
    desc: Audit the code
    cmds:
      - ./scripts/builder.sh pip-audit -r requirements.txt

  builder:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - ./scripts/build.sh "3.7"

  builder-3.8:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - ./scripts/build.sh "3.8"

  builder-3.9:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - ./scripts/build.sh "3.9"

  builder-3.10:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - ./scripts/build.sh "3.10"

  builder-3.11:
    desc: Build a docker environment with the right dependencies and utilities
    cmds:
      - ./scripts/build.sh "3.11"

  check:
    desc: Check the style, bug and quality of the code
    deps: [about]
    cmds:
      - ./scripts/builder.sh python3 --version
      - ./scripts/builder.sh ruff check archivist examples functests unittests
      - ./scripts/builder.sh python3 -m pyright archivist
      - ./scripts/builder.sh pycodestyle --format=pylint archivist examples functests unittests
      - ./scripts/builder.sh python3 -m pylint archivist examples functests unittests

  check-fixes:
    desc: Show proposed fixes from ruff
    deps: [about]
    cmds:
      - ./scripts/builder.sh ruff check --show-fixes archivist examples functests unittests

  check-fixes-apply:
    desc: Apply  proposed fixes from ruff
    deps: [about]
    cmds:
      - ./scripts/builder.sh ruff check --fix archivist examples functests unittests

  clean:
    desc: Clean git repo
    cmds:
      - find -name '*,cover' -type f -delete
      - git clean -fdX

  deps:
    desc: Show dependency tree
    cmds:
      - ./scripts/builder.sh /bin/bash -c "pipdeptree"

  docs:
    desc: Create sphinx documentation
    deps: [about, zipnotebooks]
    cmds:
      - ./scripts/builder.sh /bin/bash -c "cd docs && make clean && make html"

  format:
    desc: Format code using black
    deps: [about]
    cmds:
      - ./scripts/builder.sh black archivist examples functests unittests

  functests:
    desc: Run functests - requires an archivist instance and a authtoken
    deps: [about]
    cmds:
      - ./scripts/builder.sh ./scripts/functests.sh

  pipeline-functests:
    desc: Run functests with Junit xml output
    deps: [about]
    cmds:
      - ./scripts/builder.sh ./scripts/pipeline_functests.sh

  notebooks:
    desc: Run jupyter notebooks
    deps: [about]
    cmds:
      - ./scripts/notebooks.sh

  publish:
    desc: publish wheel package (will require username and password)
    deps: [about]
    cmds:
      - ./scripts/builder.sh python3 -m twine upload --repository pypi dist/*

  sbom:
    desc: Audit the code
    cmds:
      - ./scripts/builder.sh ./scripts/sbom.sh

  type-check:
    desc: Runs the pyright type checker against the core archivist files
    deps: [about]
    cmds:
      - ./scripts/builder.sh python3 -m pyright archivist

  unittests:
    desc: Run unittests
    deps: [about]
    cmds:
      - ./scripts/builder.sh ./scripts/unittests.sh

  venv:
    desc: Builds the virtual environment
    cmds:
      - ./scripts/venv.sh

  wheel:
    desc: Builds python wheel package
    deps: [about]
    cmds:
      - ./scripts/builder.sh ./scripts/wheel.sh

  zipnotebooks:
    desc: Zips notebooks so they can be downloaded
    cmds:
      - ./scripts/builder.sh ./scripts/zipnotebooks.sh
