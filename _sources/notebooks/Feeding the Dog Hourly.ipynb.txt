{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "d7a86415-e826-42f3-bc11-a20eec5fd2f3",
   "metadata": {},
   "source": [
    "## Feeding the Dog Hourly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f5683dae-015e-4f59-a312-326e3fa767fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create Compliance PERIOD OUTSTANDING Policy\n",
    "#\n",
    "# Main function, establishes a connection to DataTrails using an App Registration then uses that\n",
    "# to create a Compliance PERIOD OUTSTANDING Policy.\n",
    "#\n",
    "# Note: The purpose of DataTrails Jupyter Notebooks is to provide simplified examples that one can easily execute and digest.\n",
    "# The DataTrails Python SDK is authored to work cleanly with more advanced coding techniques.\n",
    "#\n",
    "# DataTrails Python SDK: https://github.com/datatrails/datatrails-python\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dd9f6f95-8832-4134-b8f2-aeda849e1f04",
   "metadata": {},
   "outputs": [],
   "source": [
    "from json import dumps as json_dumps\n",
    "from os import getenv\n",
    "\n",
    "from archivist.archivist import Archivist\n",
    "from archivist.compliance_policy_requests import (\n",
    "    CompliancePolicyPeriodOutstanding,\n",
    ")\n",
    "from archivist.logger import set_logger"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "839e2c9d-dd0d-454a-bdf0-4de873040eed",
   "metadata": {},
   "outputs": [],
   "source": [
    "%reload_ext dotenv\n",
    "%dotenv -o notebooks.env"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f7d30729-a0da-479f-91df-16b0f27ecf08",
   "metadata": {},
   "outputs": [],
   "source": [
    "# DATATRAILS_URL, DATATRAILS_APPREG_CLIENT, DATATRAILS_APPREG_SECRET are environment variables that represent connection parameters.\n",
    "#\n",
    "# DATATRAILS_URL = represents the url to the DataTrails application\n",
    "# DATATRAILS_APPREG_CLIENT = represents the client ID from an Application Registration\n",
    "# DATATRAILS_APPREG_SECRET = represents the client secret from an Application Registration\n",
    "DATATRAILS_URL = getenv(\"DATATRAILS_URL\")\n",
    "DATATRAILS_APPREG_CLIENT = getenv(\"DATATRAILS_APPREG_CLIENT\")\n",
    "DATATRAILS_APPREG_SECRET = getenv(\"DATATRAILS_APPREG_SECRET\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "11160ab4-7dfe-4618-8293-483f30f080b8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Connecting to DATATRAILS\n",
      "DATATRAILS_URL https://app.datatrails.ai\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "Main function of PERIOD OUTSTANDING policy creation.\n",
    "\n",
    "* Connect to DataTrails with client ID and client secret\n",
    "* Creates a Compliance PERIOD OUTSTANDING Policy\n",
    "\"\"\"\n",
    "\n",
    "# Optional call to set the logger level.  The argument can be either\n",
    "# \"INFO\" or \"DEBUG\".  For more sophisticated logging control see our\n",
    "# documentation.\n",
    "set_logger(\"INFO\")\n",
    "\n",
    "# Initialize connection to DATATRAILS\n",
    "print(\"Connecting to DATATRAILS\")\n",
    "print(\"DATATRAILS_URL\", DATATRAILS_URL)\n",
    "arch = Archivist(\n",
    "    DATATRAILS_URL, (DATATRAILS_APPREG_CLIENT, DATATRAILS_APPREG_SECRET), max_time=300\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b0eb183c-30ba-4091-84c0-02b0d4bb462d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_compliance_policy(arch):\n",
    "    \"\"\"\n",
    "    Creates a PERIOD OUTSTANDING compliance policy for feeding one's dog. If DataTrails sees a \"Feed\"\n",
    "    event without a closing \"Fed\" event within an hour, then Golden Retriever Asset is\n",
    "    out of compliance.\n",
    "    \"\"\"\n",
    "    period_outstanding_policy = arch.compliance_policies.create(\n",
    "        CompliancePolicyPeriodOutstanding(\n",
    "            description=\"Ensuring my dog is fed within an hour\",\n",
    "            display_name=\"Feeding My Dog Hourly\",\n",
    "            asset_filter=[\n",
    "                [\"attributes.arc_display_type=Golden Retriever\"],\n",
    "            ],\n",
    "            event_display_type=\"Feed\",\n",
    "            closing_event_display_type=\"Fed\",\n",
    "            time_period_seconds=3600,\n",
    "        )\n",
    "    )\n",
    "    print(\"PERIOD_OUTSTANDING_POLICY:\", json_dumps(period_outstanding_policy, indent=4))\n",
    "    return period_outstanding_policy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9ec8c85e-8296-420e-a782-47f1d1c6526f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Refresh token\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PERIOD_OUTSTANDING_POLICY: {\n",
      "    \"identity\": \"compliance_policies/2599ea06-e4de-4472-a5a3-37b0dae75899\",\n",
      "    \"compliance_type\": \"COMPLIANCE_PERIOD_OUTSTANDING\",\n",
      "    \"description\": \"Ensuring my dog is fed within an hour\",\n",
      "    \"display_name\": \"Feeding My Dog Hourly\",\n",
      "    \"asset_filter\": [\n",
      "        {\n",
      "            \"or\": [\n",
      "                \"attributes.arc_display_type=Golden Retriever\"\n",
      "            ]\n",
      "        }\n",
      "    ],\n",
      "    \"event_display_type\": \"Feed\",\n",
      "    \"closing_event_display_type\": \"Fed\",\n",
      "    \"time_period_seconds\": \"3600\",\n",
      "    \"dynamic_window\": \"0\",\n",
      "    \"dynamic_variability\": 0,\n",
      "    \"richness_assertions\": []\n",
      "}\n",
      "Compliance_Policy {\n",
      "    \"identity\": \"compliance_policies/2599ea06-e4de-4472-a5a3-37b0dae75899\",\n",
      "    \"compliance_type\": \"COMPLIANCE_PERIOD_OUTSTANDING\",\n",
      "    \"description\": \"Ensuring my dog is fed within an hour\",\n",
      "    \"display_name\": \"Feeding My Dog Hourly\",\n",
      "    \"asset_filter\": [\n",
      "        {\n",
      "            \"or\": [\n",
      "                \"attributes.arc_display_type=Golden Retriever\"\n",
      "            ]\n",
      "        }\n",
      "    ],\n",
      "    \"event_display_type\": \"Feed\",\n",
      "    \"closing_event_display_type\": \"Fed\",\n",
      "    \"time_period_seconds\": \"3600\",\n",
      "    \"dynamic_window\": \"0\",\n",
      "    \"dynamic_variability\": 0,\n",
      "    \"richness_assertions\": []\n",
      "}\n"
     ]
    }
   ],
   "source": [
    "# Creates PERIOD OUTSTANDING compliance policy and prints result\n",
    "compliance_policy = create_compliance_policy(arch)\n",
    "print(\"Compliance_Policy\", json_dumps(compliance_policy, indent=4))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  },
  "vscode": {
   "interpreter": {
    "hash": "c11202d2846b22eec7deaf37ea813ba92a5f75b5344a4d16688175855af7948e"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
